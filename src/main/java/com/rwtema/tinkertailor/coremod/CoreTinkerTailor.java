package com.rwtema.tinkertailor.coremod;

import com.google.common.eventbus.EventBus;
import cpw.mods.fml.common.DummyModContainer;
import cpw.mods.fml.common.LoadController;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.relauncher.IFMLLoadingPlugin;
import java.util.Map;

@IFMLLoadingPlugin.TransformerExclusions(value = {"com.rwtema.tinkershats.coremod.", "com.rwtema.tinkershats.coremod.CoreTinkerer"})
@IFMLLoadingPlugin.SortingIndex(Integer.MAX_VALUE)
@IFMLLoadingPlugin.MCVersion(value = "1.7.10")
public class CoreTinkerTailor extends DummyModContainer implements IFMLLoadingPlugin {
	protected static final ModMetadata md;
	public static boolean runtimeDeobfuscationEnabled;

	public static  boolean loaded = false;

	static {
		md = new ModMetadata();
		md.autogenerated = false;
		md.authorList.add("RWTema");
		md.credits = "RWTema";
		md.modId = "CoreTinkerTailor";
		md.version = "Whatever";
		md.name = "CoreTinkerTailor";
		md.description = "Core mod for tinker tailor";
	}

	public CoreTinkerTailor() {
		super(md);
		loaded = true;
	}

	@Override
	public String[] getASMTransformerClass() {
		return new String[]{ClassTransformerHandler.class.getName()};
	}

	@Override
	public String getModContainerClass() {
		return CoreTinkerTailor.class.getName();
	}

	@Override
	public String getSetupClass() {
		return null;
	}

	@Override
	public void injectData(Map<String, Object> data) {
		runtimeDeobfuscationEnabled = (Boolean) data.get("runtimeDeobfuscationEnabled");
	}

	@Override
	public String getAccessTransformerClass() {
		return null;
	}

	@Override
	public boolean registerBus(EventBus bus, LoadController controller) {
		return true;
	}
}
